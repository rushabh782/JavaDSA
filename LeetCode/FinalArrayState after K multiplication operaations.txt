class Solution {
    public int[] getFinalState(int[] nums, int k, int multiplier) {
        int n = nums.length;
        int modulo = 1000000007;

        // Perform k operations
        for (int i = 0; i < k; i++) {
            int minIndex = 0;
            int minValue = nums[0];

            // Find the minimum value and its index
            for (int j = 1; j < n; j++) {
                if (nums[j] < minValue) {
                    minValue = nums[j];
                    minIndex = j;
                }
            }

            // Multiply the minimum value by the multiplier and apply modulo immediately
            nums[minIndex] = (int)(((long)nums[minIndex] * multiplier) % modulo);
        }

        // Apply modulo to each element in the array (though it is already applied during multiplication)
        for (int i = 0; i < n; i++) {
            nums[i] = nums[i] % modulo;
        }

        return nums;
    }

    public static void main(String[] args) {
        Solution solution = new Solution();
        int[] nums = {100000, 2000};  // Example input
        int k = 2;
        int multiplier = 1000000;

        int[] result = solution.getFinalState(nums, k, multiplier);

        // Print the final state of the array
        for (int num : result) {
            System.out.print(num + " ");
        }
    }
}
